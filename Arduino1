#include "max6675.h"
#include<Wire.h>

#include "HX711.h"

#define calibration_factor 7050.0 //This value is obtained using the SparkFun_HX711_Calibration sketch

#define LOADCELL_DOUT_PIN  3
#define LOADCELL_SCK_PIN  2

HX711 scale;

const int ENA_PIN = A0  ; // the Arduino pin connected to the EN1 pin L298N
const int IN1_PIN = 6; // the Arduino pin connected to the IN1 pin L298N
const int IN2_PIN = 5; // the Arduino pin connected to the IN2 pin L298N

//thermo
int thermoDO = A0;
int thermoCS = A1; 
int thermoCLK = A2; 

MAX6675 thermocouple(thermoCLK, thermoCS, thermoDO);

int current_command = -1;

void setup() {
  Serial.begin(9600);
  
  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  scale.set_scale(calibration_factor); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale.tare(); //Assuming there is no weight on the scale at start up, reset the scale to 0

  //actuator 
  pinMode(ENA_PIN, OUTPUT);
  pinMode(IN1_PIN, OUTPUT);
  pinMode(IN2_PIN, OUTPUT);

  digitalWrite(ENA_PIN, HIGH);
}

void loop() {
  if(current_command == -1){
    receiveCommand();
  }
 
  else if(current_command == 1){
    getWeight();
    current_command = -1;
  }

  else if(current_command == 2){
    activateActuator();
    current_command = -1;
  }

  else if(current_command == 3){
    getTemperature();
    current_command = -1;
  }
  
  else{
    current_command = -1;
  }
}

void sendResponse(String response){
  Serial.println(response);    
}
 
void receiveCommand(){
  if(Serial.available()){
    int sent = Serial.readStringUntil('\n').toInt();
    Serial.println("ok"); 
    current_command = sent;   
  }
}

void getWeight(){
  float weight = abs(scale.get_units());
  sendResponse(String(weight));
}

void getTemperature() { 
  float heater = thermocouple.readCelsius();
  sendResponse(String(heater));
}

void activateActuator(){
  digitalWrite(IN1_PIN, HIGH);
  digitalWrite(IN2_PIN, LOW);
  delay(20000); 
  digitalWrite(IN1_PIN, LOW);
  digitalWrite(IN2_PIN, HIGH);
  delay(20000);
}
